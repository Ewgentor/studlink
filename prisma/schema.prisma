// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Project {  
  id          String @id @default(cuid())  
  title       String  
  description String  
  budget      Float  
  deadline    DateTime
  category    String  
  company     User   @relation(fields: [companyId], references: [id])  
  companyId   String
  createdAt   DateTime @default(now())  
  bids        Bid[]  
}  

model Bid {  
  id        String @id @default(cuid())  
  message   String  
  student   User   @relation(fields: [studentId], references: [id])  
  studentId String  
  project   Project @relation(fields: [projectId], references: [id])  
  projectId String
  createdAt DateTime @default(now())    
  status    String // "pending", "accepted", "rejected"  
}  


// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    role          String @default("student") // "student", "company", "admin"
    bio           String?
    rating        Float @default(0)
    skills        String[]  //"Бэкенд", "фронтэнд", "ML" и т.п.
    accounts      Account[]
    sessions      Session[]
    projects      Project[]
    bids          Bid[] 
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
