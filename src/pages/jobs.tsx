import { useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";

import { api } from "~/utils/api";
import { useEffect, useState } from "react";
import type { Session } from "next-auth";

export default function Test(){
    const router = useRouter();
    const {data: session, status} = useSession();
    useEffect(() => {
        if (status === "unauthenticated") {
            void router.push("/");
            }
          }, [status, router]);
    return (
        <>
        <Head>
            <title>StudLink - Создать заказ</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="flex min-h-screen justify-evenly items-center bg-[url(/target.png)] bg-cover bg-center text-white ">
            {status == "authenticated" ? <AuthForm session={session}/> : <p className="text-white">Загрузка...</p>}
        </main>
        </>
    )
}

export function AuthForm({ session }: { session: Session }){
    const router = useRouter();
    const [title, setTitle] = useState("");
    const [category, setCategory] = useState("");
    const [deadline, setDeadline] = useState("");
    const [budget, setBudget] = useState(0);
    const [description, setDescription] = useState("");
 
    const { mutate } = api.post.createPost.useMutation({
    onSuccess: () => {
            setTitle("");
            setCategory("");
            setDeadline("");
            setBudget(0);
            setDescription("");
            void router.push("/jobs")
        },
    onError: (error) => {
        console.log(`Error creating post:`, error)
    }
    })

    return (
        <>
            <div className="">
                <label className="flex flex-col" htmlFor=""> 
                    <p className="text-lg font-bold">Как назвать задание?</p>
                    <input className="bg-white text-black rounded-lg p-2 border-1 border-solid shadow-lg shadow-cyan-500/50 w-xl my-3" type="text" placeholder="Например: 'Cоздать сайт'" value={title} onChange={
                    (e) => setTitle(e.target.value)
                    } />
                </label>
                <label htmlFor="" className="flex items-center my-3">
                    <p className="text-lg font-bold pr-5">Категория:</p>
                    <select className="bg-white text-black rounded-lg p-2 border-1 border-solid shadow-lg shadow-cyan-500/50" onChange={(e) => setCategory(e.target.value)}>
                        <option value="Frontend">Frontend</option>
                        <option value="Backend">Backend</option>
                        <option value="Ремонт">Ремонт</option>
                        <option value="Настройка">Настройка</option>
                        <option value="Установка ПО">Установка ПО</option>
                        <option value="Консультация">Консультация</option>
                        <option value="Антивирусы">Антивирусы</option>
                        <option value="Защита данных">Защита данных</option>
                        <option value="VPN">VPN</option>
                        <option value="Кибербезопасность">Кибербезопасность</option>
                        <option value="Графический">Графический</option>
                        <option value="Интерьеры">Интерьеры</option>
                        <option value="UI/UX">UI/UX</option>
                        <option value="3D-моделирование">3D-моделирование</option>
                    </select>
                </label>
                <label htmlFor="">
                    <p className="text-lg font-bold">Дедлайн:</p>
                    <input className="bg-white text-black rounded-lg p-2 border-1 border-solid shadow-lg shadow-cyan-500/50 my-3" type="datetime-local" onChange={(e) => setDeadline(e.target.value)}/>
                </label>
                <label htmlFor="" className="flex my-3">
                    <p className="text-lg font-bold">Укажите ваш <br /> максимальный <br />бюджет (₽)</p>
                    <input 
                        className="bg-white text-black rounded-lg p-2 border-1 border-solid shadow-lg shadow-cyan-500/50 m-4 w-40" 
                        maxLength={10} 
                        inputMode="decimal" 
                        type="number" 
                        placeholder="Budget" 
                        onChange={(e) => setBudget(Number(e.target.value))}
                    />
                </label>
                <button onClick={() =>
                    {mutate({
                        title: title,
                        deadline: (new Date(deadline)).toISOString(),
                        description: description,
                        budget: budget,
                        category: category,
                    })
                }
                } className="text-lg font-bold bg-teal-900 py-3 px-15 rounded-xl mt-15">
                    Создать заказ
                </button>
            </div>
            <div className="">
                <label htmlFor="" className="flex flex-col ">
                    <p className="text-xl font-bold">Описание задания:</p>
                    <textarea className="w-xs h-64 bg-white text-black rounded-lg mt-5 p-3 border-1 border-solid shadow-lg shadow-cyan-500/50" placeholder="Опишите ваши пожелания в работе" onChange={(e) => setDescription(e.target.value)} maxLength={1024}></textarea>
                </label>
            </div>
        </>
    )
}
